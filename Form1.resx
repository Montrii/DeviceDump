<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStripToolbar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAyKyX/Misl/zIrJf8yKyX/Mysl/zIrJf8zKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Mysl/zMrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zMr
        Jf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zMrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8zKyX/Misl/zIrJf8yKyX/Misl/zIr
        Jf8yKyX/Mysl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Mysl/zMrJf8zKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8zKyb/Mysl/zIrJf8yKyX/Misl/zIrJf8zKyX/Misl/zIrJf8yKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Mysl/zMrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8zKyX/Mysl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Misl/zMrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zMr
        Jf8zKyX/Misl/zIrJf8yKyX/Misl/zIrJf8zKyX/Mysl/zIrJf8yKyX/Misl/zIrJf8yKyX/Mism/zMs
        Jv8zLCX/Mysl/zIrJf8yKyX/Misl/zMsJv8zKyb/Mysm/zIrJf8zKyX/Misl/zIrJf8yKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zMrJf8zKyX/Mysl/zIrJv8yKyX/Misl/zIr
        Jf8yKyX/Mysl/zMrJf8yKyX/Misl/zIrJf8zLCb/Misl/zMsJv8zKyb/Misl/zIrJf8yKyX/Mi4p/zIu
        Kf8yLin/Mi4o/zIrJf8yLin/Miwm/zIrJf8yLSj/Mi0n/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8zKyX/Mysl/zMrJf8zKyX/Misl/zEqJP9LQTj/ODAq/zApJP8zKyX/Mysm/zIq
        I/8zHRL/Mx4U/zMfFf8zHxX/Miok/zMhF/8yKSP/Miwn/zMkG/8zJBz/Miwm/zIrJf8yKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8zKyX/PDQt/1JGPf9COTL/NS0n/zIr
        Jf8zKSP/MjQx/y1/lv8tfZT/LnqQ/y52if8yMi//Lm+A/zI7Ov8zJR3/L11o/zBYYf8yJBz/Miwn/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zQsJv9SRz3/ZFdL/15R
        Rv8/Ni//MSol/zMpIv8yODb/LJOx/yqz1v8o0Pj/LYei/zI6OP8px+v/MUA//zQIAP8slqz/LJOo/zMc
        Ev8yLin/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zMrJf8zLCb/MCkj/1pO
        RP+pk4D/hnVl/zkwKv8xKiX/Mywn/zIsJv80EwT/L2Nw/yus0/80FQj/MjY0/yq86f8tfJP/L11p/yqt
        1f8thZ//Mx4U/zIuKf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zMrJf8zKyX/Misl/zMs
        Jv9LQjn/WExC/5mFdP95aVv/TkM7/z00Lf8wKSP/My8q/zMeE/8vZXP/KrHb/zMjG/8yNzX/Kb7s/ym2
        4f8qqc7/KMv9/y2Bmf8zHxX/Mi4p/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8zKyb/Mywm/zIr
        Jv80LSf/TEI5/1lNQ/9NQzr/kH1t/29gVP9SRz7/VEk//z01L/8xKCL/MjQx/yyNqf8qq9P/MyIY/zI4
        Nv8pw+z/Mjg1/zUCAP8sk63/LJCp/zMcEv8yLin/Misl/zIrJv8zKyX/Mism/zIrJf8yKyX/Misl/zIr
        Jf8zLCb/Misl/zYuKP9WS0H/UEU8/3VmWf+ok4H/alxQ/1FGPf9bTkT/Qzs1/zEhGP8wWGL/KM79/yqs
        zP8zIxv/MjUz/yunzf8ucoX/MFdg/yuev/8ueI7/MyAX/zItKP8yKyX/Mism/zIrJf8yKyb/Misl/zIr
        Jf8yKyX/Misl/zMrJf8yKyX/Ni8o/09FO/94aFv/jHpr/5KAcP97a17/TUI5/1pORP9BODH/MCsm/zQg
        Fv8wWWL/LJOw/zMmHv8yKyb/Mi8q/yufwf8pv+3/Lmp5/zMiGf8yLSj/Misl/zIrJf8yKyX/Misl/zIr
        Jv8yKyX/Misl/zIrJf8yKyX/Mysl/zIrJf81LSf/VktB/5uId/9ZTUP/g3Jj/6KOfP9xYlX/VEg//0M5
        Mv8wKSP/Mywn/zIrJf8zKCH/Miwn/zIrJf8yKyX/Mycf/zMlHf8zKiP/Miwm/zIrJf8yKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8zKyX/Misl/zQtJ/9ZTUP/mod1/11RRv+GdWb/b2BU/498
        bP9rXVH/PjUu/zEqJf8zLCb/MyUd/zMkHP8zKCL/Mi0o/zItJ/8yLin/Mi4p/zMnIP8yLCb/Mism/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zMrJv8yKyX/NS4o/1RJP/9dUEb/UkY9/4t5
        af9iVEr/h3Zn/4FwYv86NC7/MiMc/zI7Ov8qrdX/Kbjk/y9tfv80HBH/Mycg/zMgFv8zJh3/LJm5/zI9
        Pf8zJBz/Miwn/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Mysl/zIrJf81Lij/VEg//1ZK
        Qf9RRj3/j31t/2lbT/9wYlX/bWBU/z4wJ/8vQkX/LJm4/y9kcf8vW2X/LYeg/y54jP8thZ//KqnP/yul
        yf8oz/v/K6nO/zI2NP8yKCL/Miwm/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8zKyX/Misl/zUu
        KP9USD//WExC/1RIP/+Sf2//bl9T/01DOv9XTUP/QzAm/y5RV/8qweX/MyYe/zQQAv8thJf/K6jF/yq5
        0/8ucoL/L2Bs/ynB8P8udYn/Miwn/zIrJf8yKyb/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zMr
        Jv8yKyX/NS4o/1RJP/9TSD7/UUY8/1ZKQP9TRz7/UUY9/1hORP9DMSf/Lk1U/yu34v8yNDL/MyIY/y2G
        of8slLP/MFpj/yyRr/8zLyn/Krnk/zFER/8zIhr/Mi0o/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIr
        Jf8yKyX/Mysl/zMsJv8yKiX/QDcw/5uKe/+pmIf/opGB/6STg/+smon/ZVxR/zAfF/8xVVr/KcLk/zMj
        Gv81DQD/LYia/yuctP8yNDD/KNXx/zI1L/8qtN7/ME5U/zMkHP8yLCf/Misl/zMrJv8zKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Mywm/zApI/85MSv/taKR/7OhkP+8qZf/sZ+O/8Swnv9tYlf/KB4Z/zQ6
        Of8tgpj/K529/yudvv8slLH/MFRc/zI0MP8udor/LJSx/yjR+f8xS07/MyQd/zItJ/8yKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8zLCb/MSok/zszLP+sm4r/bmFU/6STg/90Z1r/oI9//3Bk
        WP8oIx//NSce/zIzMP8thqD/LY6q/zBWX/80HhP/Myok/zMnIP8tgJf/LImk/zI7O/8zKCH/Miwn/zIr
        Jv8zKyb/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Mysl/zMsJv8wKiT/OzMs/7mmlP/DsJ3/w6+d/76q
        mP/NuKX/b2NY/ykiHf81Lyn/Misl/zQdEv80HBH/MyUd/zIuKf8yKyb/Mi0n/zMeFP8zHxX/Myoj/zIr
        Jv8yKyX/Mysl/zIrJf8zKyX/Misl/zIrJf8yKyX/Misl/zMrJv8zKyb/Mywm/zErJf83MCn/fnBj/4d5
        a/+Edmn/hHZp/4p8bv9USUH/LSYh/zQsJv8zLCb/Mi4p/zIuKf8zLSf/Mysl/zMrJv8zKyb/Mi4p/zIu
        Kf8zLCb/Mysl/zIrJf8zKyX/Mysl/zMrJf8zKyb/Misl/zIrJf8yKyX/Mysm/zMrJv8yKyX/Mywm/zIr
        Jf8qJB//KSId/ykjHv8pIh3/KCId/y8oIv8zLCb/Mysl/zMrJf8zKyX/Mysl/zMrJf8zKyX/Mysl/zIr
        Jf8yKyX/Mysl/zMrJf8yKyX/Misl/zMrJf8zKyX/Mysl/zIrJf8yKyX/Misl/zMrJf8zKyb/Mysm/zMr
        Jf8zKyX/Mysl/zUtJ/81LSf/NS0n/zUtJ/81LSf/Mywm/zIrJf8zKyX/Mysl/zMrJf8zKyX/Mysl/zMr
        Jf8zKyX/Misl/zIrJf8zKyX/Mysl/zIrJf8yKyX/Mysm/zMrJv8yKyX/Misl/zIrJf8yKyX/Mysl/zMr
        Jv8zLCb/Mywm/zMrJv8zKyX/Mysl/zIrJf8yKyX/Misl/zMrJf8yKyX/Mysl/zMrJf8zKyX/Mysl/zMr
        Jf8zKyX/Mysl/zMrJf8zKyX/Mysl/zMrJf8zKyX/Mysl/zIrJf8zKyX/Mywm/zMrJf8yKyX/Misl/zIr
        Jf8yKyX/Mysl/zMsJv8zLCb/Mysl/zIrJf8zKyX/Misl/zIrJf8yKyX/Misl/zIrJf8zKyX/Mysl/zMr
        Jf8yKyX/Misl/zIrJf8zKyX/Mysl/zMrJf8zKyX/Mysm/zMrJv8yKyX/Misl/zMrJv8zLCb/Mysl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Mywm/zMrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Misl/zMr
        Jf8zKyX/Mysl/zMrJf8zKyX/Mysl/zIrJf8yKyX/Mysl/zIrJf8zKyX/Mysl/zIrJf8yKyX/Mysm/zMr
        Jf8zKyX/Misl/zIrJf8yKyX/Misl/zIrJf8yKyX/Mism/zMrJf8zKyX/Misl/zIrJf8yKyX/Misl/zIr
        Jf8yKyX/Misl/zIrJf8yKyX/Mysl/zMrJf8yKyX/Misl/zIrJf8yKyX/Misl/zIrJf8zKyX/Misl/zIr
        Jf8yKyX/Mysm/zIrJf8yKyX/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>